---
AWSTemplateFormatVersion: 2010-09-09
Description: Provides configuration for a VFX Render Farm Instances.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Region Configuration
        Parameters:
          - pAvailabilityZones
          - pSupportsEfs

      - Label:
          default: Network (existing Production VPC config)
        Parameters:
          - pProductionVPC
          - pProdAppPrivateSubnetA
          - pProdAppPrivateSubnetB

      - Label:
          default: Render Farm Instance Configuration
        Parameters:
          - pRenderFarmAmi
          - pRenderFarmMinCapacity
          - pRenderFarmDesiredCapacity
          - pRenderFarmMaxCapacity

Parameters:
  pAvailabilityZones:
    Description: The list of Availability Zones to use for the subnets in the VPC.
      This template uses two Availability Zones from your list and preserves the logical order you specify.
    Type: List<AWS::EC2::AvailabilityZone::Name>

  pSupportsEfs:
    AllowedValues:
      - true
      - false
    Description: Determines if this region supports EFS (passed in from Main template)
    Type: String

  pProductionVPC:
    Type: AWS::EC2::VPC::Id

  pProdAppPrivateSubnetA:
    Description: Production Application Subnet A (private)
    Type: AWS::EC2::Subnet::Id

  pProdAppPrivateSubnetB:
    Description: Production Application Subnet B (private)
    Type: AWS::EC2::Subnet::Id

  pRenderFarmAmi:
    Description: Which AMI do you want to use for Render Instances?
    Type: AWS::EC2::Image::Id

  pRenderFarmMinCapacity:
    Description: The minimum number of instances that can run in your auto scale group
    Type: String

  pRenderFarmDesiredCapacity:
    Description: The desired capacity must be less than or equal to the maximum capacity
    Type: String

  pRenderFarmMaxCapacity:
    Description: The maximum number of instances that you can run in your auto scale group
    Type: String

  pEnvironment:
    AllowedValues:
      - DEV
      - TEST
      - PROD
    Default: DEV
    Description: Environment (Dev, Test or Prod)
    Type: String

Mappings:
  RegionMap:
    ap-northeast-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    ap-northeast-2:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    ap-south-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t2.small]
    ap-southeast-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    ap-southeast-2:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    ca-central-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    eu-central-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    eu-west-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    eu-west-2:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    sa-east-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    us-east-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    us-east-2:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    us-gov-west-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    us-west-1:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]
    us-west-2:
      InstanceTypes: [InstanceType: t2.micro, InstanceType: t3.micro]

Conditions:
  SupportsEfs: !Equals
    - !Ref pSupportsEfs
    - true

  NoEfsSupport: !Not
    - Condition: SupportsEfs

Resources:
  rRenderFarmSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref pProductionVPC
      GroupDescription: Render farm security group
      Tags:
        - Key: Name
          Value: render-farm-sg
        - Key: Environment
          Value: !Ref pEnvironment

  rRenderFarmEfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: SupportsEfs
    Properties:
      VpcId: !Ref pProductionVPC
      GroupDescription: Security group for render farm mount target
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref rRenderFarmSecurityGroup
      Tags:
        - Key: Name
          Value: efs-sg
        - Key: Environment
          Value: !Ref pEnvironment

  rRenderFarmEfs:
    Type: AWS::EFS::FileSystem
    Condition: SupportsEfs
    Properties:
      Encrypted: true
      PerformanceMode: generalPurpose
      FileSystemTags:
        - Key: Name
          Value: RenderFarmFs

  rRenderFarmEfsMountTarget0:
    Type: AWS::EFS::MountTarget
    Condition: SupportsEfs
    Properties:
      FileSystemId: !Ref rRenderFarmEfs
      SubnetId: !Ref pProdAppPrivateSubnetA
      SecurityGroups:
        - !Ref rRenderFarmEfsSecurityGroup

  rRenderFarmEfsMountTarget1:
    Type: AWS::EFS::MountTarget
    Condition: SupportsEfs
    Properties:
      FileSystemId: !Ref rRenderFarmEfs
      SubnetId: !Ref pProdAppPrivateSubnetB
      SecurityGroups:
        - !Ref rRenderFarmEfsSecurityGroup

  rRenderFarmRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  rRenderFarmInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref rRenderFarmRole

  rRenderFarmLaunchTemplateNoEfs:
    Condition: NoEfsSupport
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref pRenderFarmAmi
        IamInstanceProfile:
          Name: !Ref rRenderFarmInstanceProfile
        SecurityGroupIds:
          - !Ref rRenderFarmSecurityGroup
        UserData:
          Fn::Base64: |
            #!/bin/bash -xe

            yum -y --security update

  rRenderFarmLaunchTemplateEfs:
    Condition: SupportsEfs
    Type: AWS::EC2::LaunchTemplate
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            1_propagate_dns:
              command: !Sub |
                #!/bin/bash -xe
                # script to wait for EFS file system DNS name to be propagated, as it can take up to 90s
                cat << EOF > /tmp/dns.sh
                results=1
                while [[ \$results != 0 ]]; do
                    nslookup ${rRenderFarmEfs}.efs.${AWS::Region}.amazonaws.com
                    results=\$?
                    if [[ \$results = 1 ]]; then
                        sleep 30s
                    fi
                done
                EOF
            2_run_script:
              command: |
                chmod 755 /tmp/dns.sh
                /tmp/dns.sh
            3_mkdir:
              command: |
                EFS_DIRECTORY=/mnt/efs
                mkdir $EFS_DIRECTORY
            4_mount:
              command: mount -a -t efs defaults
            5_fstab:
              command: !Sub |
                echo "${rRenderFarmEfs}:/ $EFS_DIRECTORY efs _netdev" >> /etc/fstab
    Properties:
      LaunchTemplateData:
        ImageId: !Ref pRenderFarmAmi
        IamInstanceProfile:
          Name: !Ref rRenderFarmInstanceProfile
        SecurityGroupIds:
          - !Ref rRenderFarmSecurityGroup
        UserData:
          Fn::Base64: |
            #!/bin/bash -xe
            yum update --security -y
            yum update aws-cfn-bootstrap -y
            yum install amazon-efs-utils -y

            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource rRenderFarmLaunchTemplateEfs --region ${AWS::Region}
            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource rRenderFarmLaunchTemplateEfs --region ${AWS::Region}

  rRenderFarmAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref pRenderFarmDesiredCapacity
      MinSize: !Ref pRenderFarmMinCapacity
      MaxSize: !Ref pRenderFarmMaxCapacity
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity: 0
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !If [SupportsEfs, !Ref rRenderFarmLaunchTemplateEfs, !Ref rRenderFarmLaunchTemplateNoEfs]
            Version: 1
          Overrides: !FindInMap [RegionMap, !Ref 'AWS::Region', InstanceTypes]
      AvailabilityZones:
        - !Select [0, !Ref pAvailabilityZones]
        - !Select [1, !Ref pAvailabilityZones]
      VPCZoneIdentifier:
        - !Ref pProdAppPrivateSubnetA
        - !Ref pProdAppPrivateSubnetB
      Tags:
        - Key: Name
          Value: render-farm-instance
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

Outputs:
  rRenderFarmSecurityGroup:
    Value: !Ref rRenderFarmSecurityGroup

  rRenderFarmEfsMountTarget0:
    Condition: SupportsEfs
    Value: !Ref rRenderFarmEfsMountTarget0

  rRenderFarmEfsMountTarget1:
    Condition: SupportsEfs
    Value: !Ref rRenderFarmEfsMountTarget1

  rRenderFarmRole:
    Value: !Ref rRenderFarmRole

  rRenderFarmEfsSecurityGroup:
    Condition: SupportsEfs
    Value: !Ref rRenderFarmEfsSecurityGroup

  rRenderFarmAutoScalingGroup:
    Value: !Ref rRenderFarmAutoScalingGroup

  rRenderFarmLaunchTemplate:
    Value: !If
      - SupportsEfs
      - !Ref rRenderFarmLaunchTemplateEfs
      - !Ref rRenderFarmLaunchTemplateNoEfs